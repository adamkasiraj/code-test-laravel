{"version":3,"sources":["app.js","NameEntry.js","name.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"all.js","sourcesContent":["/* scripts/app.js */\n\n(function() {\n\n    'use strict';\n\n    angular\n        .module('nameTracker', [\n            'ngResource',\n            'ui.bootstrap'\n        ]);\n\n})();","/* scripts/controllers/NameEntry.js */\n\n(function() {\n\n    'use strict';\n\n    angular\n        .module('nameTracker')\n        .controller('NameEntry', NameEntry);\n\n        function NameEntry(name) {\n\n            // name is our capture variable\n            var vm = this;\n\n            vm.nameentries = [];\n\n            // Submits the name entry that will be called \n            // when we click the \"Add Name\" button\n            vm.logNewName = function() {\n\n                name.saveName({\n                    \"names\":vm.user_name\n                }).then(function(success) {\n                    getNameEntries();\n                    console.log(success);\n                }, function(error) {\n                    console.log(error);\n                });\n\n                getNameEntries();\n\n                vm.user_name = \"\";\n\n            }\n\n            // Specify the name entry to be deleted and pass it to the deleteNameEntry method on the name service\n            vm.deleteNameEntry = function(nameentry) {\n\n                var id = nameentry.id;\n\n                name.deleteName(id).then(function(success) {\n                    getNameEntries();\n                    console.log(success);\n                }, function(error) {\n                    console.log(error);\n                });      \n\n            }\n\n            // Grab all the name entries saved in the database\n            getNameEntries();\n\n            // Fetches the name entries and puts the results\n            // on the vm.nameentries array\n            function getNameEntries() {\n                name.getName().then(function(results) {\n                    vm.nameentries = results;\n                    //console.log(vm.nameentries);\n                }, function(error) {\n                    console.log(error);\n                });\n            }   \n        }\n\n})();","/* scripts/services/name.js */\n\n(function() {\n\n    'use strict';\n\n    angular\n        .module('nameTracker')\n        .factory('name', name);\n\n        function name($resource) {\n\n            // ngResource call to the API with id as a paramaterized URL\n            // and setup for the update method\n            var Name = $resource('api/name/', {}, {\n                update: {\n                    method: 'PUT'\n                }\n            });\n\n            function getName() {\n                // $promise.then allows us to intercept the results\n                // which we will use later\n                return Name.query().$promise.then(function(results) {\n                    return results;\n                }, function(error) { // Check for errors\n                    console.log(error);\n                });\n            }\n\n            // Grab data passed from the view and send\n            // a POST request to the API to save the data\n            function saveName(data) {\n\n                return Name.save(data).$promise.then(function(success) {\n                    console.log(success);\n                }, function(error) {\n                    console.log(error);\n                });\n            }\n\n            function deleteName(id) {\n              return Name.delete({id:id}).$promise.then(function(success) {\n                console.log(success);\n              }, function(error) {\n                console.log(error);\n              });\n            }\n\n            return {\n                getName: getName,\n                saveName: saveName,\n                deleteName: deleteName\n            }\n\n            return {};\n\n        }\n})();"]}